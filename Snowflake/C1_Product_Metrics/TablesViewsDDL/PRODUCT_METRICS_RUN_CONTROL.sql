--DROP TABLE APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL_OLD;
--DROP TABLE APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL;

--drop table APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL; 
CREATE TABLE APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL 
    ( PROC_OR_STEP VARCHAR(16777216)
    , RUN_FOR_MONTH DATE
    , RUN_DATE DATE default CURRENT_DATE()
    , OPERATOR VARCHAR(16777216)
    , EXECUTION_TIME TIMESTAMPTZ
    , STATUS VARCHAR(16777216)
    );

--ALTER TABLE APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL rename to APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROLOLD;

--INSERT into APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL (PROC_OR_STEP, RUN_FOR_MONTH, OPERATOR, EXECUTION_TIME, STATUS)
select PROC_OR_STEP, RUN_FOR_MONTH, OPERATOR, EXECUTION_TIME, STATUS
  from APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROLOLD
;  


-- this model for monthly runs -- when running after the first of the month to capture what the closed month looked like
INSERT INTO APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL (PROC_OR_STEP, RUN_FOR_MONTH, OPERATOR, EXECUTION_TIME, STATUS)
SELECT 'FILL_MONTHLY_ACTIVITY_SCORES' as PROC_OR_STEP
     ,  date_trunc('MONTH',dateadd(month, -1, CURRENT_DATE())) AS RUN_FOR_MONTH -- USE THIS TO MANUALLY OVERRIDE THE RUN DATE OTHERWISE IT WILL DEFAULT
     , CURRENT_USER() AS OPERATOR
     , CONVERT_TIMEZONE('UTC',CURRENT_TIMESTAMP()) AS EXECUTION_TIME
     , 'Incomplete' AS STATUS
;  

-- this model for daily or wekkly runs -- where run is for the most recent completed day
INSERT INTO APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL (RUN_FOR_MONTH, RUN_DATE, OPERATOR, EXECUTION_TIME, STATUS, PROC_OR_STEP)
SELECT date_trunc('MONTH', CURRENT_DATE()) AS RUN_FOR_MONTH
     , dateadd(day, -1, CURRENT_DATE()) AS RUN_DATE -- USE THIS TO MANUALLY OVERRIDE THE RUN DATE OTHERWISE IT WILL DEFAULT
     , CURRENT_USER() AS OPERATOR
     , CONVERT_TIMEZONE('UTC',CURRENT_TIMESTAMP()) AS EXECUTION_TIME
     , 'Incomplete' AS STATUS
     , 'FILL_LMA_LIC_PACKAGE_WEEKLY' as PROC_OR_STEP
;

-- tests
SELECT MAX(REPORT_DATE), MIN(REPORT_DATE)
FROM APTTUS_DW.PRODUCT.MONTHLY_ACTIVITY_SCORES
;

select count(*) as DUP_COUNT from (
SELECT COUNT(*) , ORG_SOURCE, SOURCE_ORG_ID, REPORT_DATE, PRODUCT_LINE
FROM APTTUS_DW.PRODUCT.MONTHLY_ACTIVITY_SCORES
GROUP BY ORG_SOURCE, SOURCE_ORG_ID, REPORT_DATE, PRODUCT_LINE
HAVING COUNT(*) > 1
)
;


-- older versions 
/*
CREATE TABLE APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL
AS 
SELECT date_trunc('MONTH',CURRENT_DATE()) AS RUN_FOR_MONTH -- USE THIS TO MANUALLY OVERRIDE THE RUN DATE OTHERWISE IT WILL DEFAULT
     , CURRENT_USER() AS OPERATOR
     , CONVERT_TIMEZONE('UTC',CURRENT_TIMESTAMP()) AS EXECUTION_TIME
     , 'Incomplete' AS STATUS
;

ALTER TABLE APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL add column PROC_OR_STEP varchar(16777216);
update APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL
    set PROC_OR_STEP = 'FILL_MONTHLY_ACTIVITY_SCORES';

update APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL
    set STATUS = 'Complete'
WHERE PROC_OR_STEP = 'FILL_MONTHLY_ACTIVITY_SCORES'
  AND EXECUTION_TIME = (SELECT MAX(EXECUTION_TIME) AS RECENT_EXEC 
        FROM APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL
        WHERE PROC_OR_STEP = 'FILL_MONTHLY_ACTIVITY_SCORES')   
    ;

alter table APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL rename to APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL_old;  

INSERT into APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL
select PROC_OR_STEP
     , dateadd(month, -1, RUN_FOR_MONTH) as RUN_FOR_MONTH
     , OPERATOR
     , EXECUTION_TIME
     , STATUS
FROM APTTUS_DW.PRODUCT.PRODUCT_METRICS_RUN_CONTROL_OLD     
INSERT INTO PRODUCT_METRICS_RUN_CONTROL (PROC_OR_STEP, RUN_FOR_MONTH, RUN_DATE, OPERATOR, EXECUTION_TIME, STATUS) VALUES ('', '', '', '', '', '');
*/