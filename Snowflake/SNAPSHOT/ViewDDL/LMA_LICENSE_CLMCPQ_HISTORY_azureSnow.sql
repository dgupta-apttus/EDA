SELECT CURRENT_ROLE();

Select TABLE_CATALOG||'.'||TABLE_SCHEMA||'.'||TABLE_NAME, MAX(ORDINAL_POSITION)
 FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
 WHERE TABLE_NAME LIKE 'LMA_LICENSE_CLMCPQ_SNAP%'
 GROUP by TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
 order by 1
; 

with get_last as(
        Select MAX(ORDINAL_POSITION) as LAST_COL
         FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
         WHERE TABLE_NAME = 'LMA_LICENSE_CLMCPQ_SNAP_1'
)
Select TABLE_CATALOG||'.'||TABLE_SCHEMA||'.'||TABLE_NAME, ORDINAL_POSITION, COLUMN_NAME
 FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
 WHERE TABLE_NAME LIKE 'LMA_LICENSE_CLMCPQ_SNAP%'
   AND ORDINAL_POSITION > ((SELECT LAST_COL from get_last)-1)
   AND COLUMN_NAME <> 'SNAP_LOAD_AT'
; 

Select TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION
FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME LIKE 'LMA_LICENSE_CLMCPQ_SNAP%'
ORDER BY ORDINAL_POSITION, TABLE_NAME 
;

select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1;
select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1604724178734_1604750472681;
select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1604724178734_1605952931520;

-- CHANGE -- uncommend insert and update table name to previous snap
-- CHANGE -- manage columns near bottom
INSERT INTO APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1604724178734_1604750472681 
      (ACCOUNTID__C, ACCOUNT_NAME__C, ADMIN_USERS__C, AUTHOR_USERS__C, AUTO_RENEW__C, COMPLY_USERS__C, CREATEDBYID, CREATEDDATE, CURRENCYISOCODE
      , CUSTOM_LAST_MODIFIED_DATE__C, ID, ISDELETED, IS_APTTUS_CUSTOMER__C, LASTMODIFIEDBYID, LASTMODIFIEDDATE, LASTREFERENCEDDATE, LASTVIEWEDDATE
      , NAME, OEM__C, OTHER_USERS_DESCRIPTION__C, OTHER_USERS__C, OWNERID, RECORDTYPEID, RELEASE_NAME__C, RENEWAL_PROVISIONS__C, SFLMA__ACCOUNT__C
      , SFLMA__CONTACT__C, SFLMA__EXPIRATION_DATE__C, SFLMA__EXPIRATION__C, SFLMA__HELP__C, SFLMA__INSTALL_DATE__C, SFLMA__IS_SANDBOX__C, SFLMA__LEAD__C
      , SFLMA__LICENSED_SEATS__C, SFLMA__LICENSE_STATUS__C, SFLMA__LICENSE_TYPE__C, SFLMA__ORG_INSTANCE__C, SFLMA__ORG_STATUS_FORMULA__C, SFLMA__ORG_STATUS__C
      , SFLMA__ORG_TRIAL_EXPIRATION__C, SFLMA__ORG_TYPE__C, SFLMA__PACKAGE_LICENSE_ID__C, SFLMA__PACKAGE_VERSION__C, SFLMA__PROXY_USER__C, SFLMA__SEATS__C
      , SFLMA__STATUS__C, SFLMA__SUBSCRIBER_ORG_ID__C, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C, SFLMA__TRIAL_EXPIRATION_DATE__C, SFLMA__USED_LICENSES__C
      , SYSTEMMODSTAMP, TDO_NAME__C, TOTAL_USERS_ROLLUP__C, WIZARD_USERS__C
      , _SDC_BATCHED_AT, _SDC_EXTRACTED_AT, _SDC_RECEIVED_AT, _SDC_SEQUENCE, _SDC_TABLE_VERSION, LASTACTIVITYDATE
      , ACCOUNT_NAME_TEXT__C, STATUS_DATE__C, ACCOUNT_ID__C, SFLMA__PACKAGE__C, SFLMA__ORG_EDITION__C, PACKAGE_NAME__C, PACKAGE_VERSION_NAME__C
      , X18_DIGIT_ACCOUNT_ID__C, X18_DIGIT_NEW_SFDC_ID__C, SFDC_OEM_EMBEDDED_SEATS__C
      , SNAP_LOAD_AT) 
SELECT ACCOUNTID__C, ACCOUNT_NAME__C, ADMIN_USERS__C, AUTHOR_USERS__C, AUTO_RENEW__C, COMPLY_USERS__C, CREATEDBYID, CREATEDDATE, CURRENCYISOCODE
      , CUSTOM_LAST_MODIFIED_DATE__C, ID, ISDELETED, IS_APTTUS_CUSTOMER__C, LASTMODIFIEDBYID, LASTMODIFIEDDATE, LASTREFERENCEDDATE, LASTVIEWEDDATE
      , NAME, OEM__C, OTHER_USERS_DESCRIPTION__C, OTHER_USERS__C, OWNERID, RECORDTYPEID, RELEASE_NAME__C, RENEWAL_PROVISIONS__C, SFLMA__ACCOUNT__C
      , SFLMA__CONTACT__C, SFLMA__EXPIRATION_DATE__C, SFLMA__EXPIRATION__C, SFLMA__HELP__C, SFLMA__INSTALL_DATE__C, SFLMA__IS_SANDBOX__C, SFLMA__LEAD__C
      , SFLMA__LICENSED_SEATS__C, SFLMA__LICENSE_STATUS__C, SFLMA__LICENSE_TYPE__C, SFLMA__ORG_INSTANCE__C, SFLMA__ORG_STATUS_FORMULA__C, SFLMA__ORG_STATUS__C
      , SFLMA__ORG_TRIAL_EXPIRATION__C, SFLMA__ORG_TYPE__C, SFLMA__PACKAGE_LICENSE_ID__C, SFLMA__PACKAGE_VERSION__C, SFLMA__PROXY_USER__C, SFLMA__SEATS__C
      , SFLMA__STATUS__C, SFLMA__SUBSCRIBER_ORG_ID__C, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C, SFLMA__TRIAL_EXPIRATION_DATE__C, SFLMA__USED_LICENSES__C
      , SYSTEMMODSTAMP, TDO_NAME__C, TOTAL_USERS_ROLLUP__C, WIZARD_USERS__C
      , _SDC_BATCHED_AT, _SDC_EXTRACTED_AT, _SDC_RECEIVED_AT, _SDC_SEQUENCE, _SDC_TABLE_VERSION, LASTACTIVITYDATE
      , ACCOUNT_NAME_TEXT__C, STATUS_DATE__C, ACCOUNT_ID__C, SFLMA__PACKAGE__C, SFLMA__ORG_EDITION__C, PACKAGE_NAME__C, PACKAGE_VERSION_NAME__C
      , X18_DIGIT_ACCOUNT_ID__C, X18_DIGIT_NEW_SFDC_ID__C, SFDC_OEM_EMBEDDED_SEATS__C
-- change -- remove older NULL AS from column
-- change -- add columns from the previous snap iteration as NULL AS 
      , SNAP_LOAD_AT 
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1;

-- change -- check counts to insure that the recently replaced snap now has all rows
D--ROP APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_PRIOR;
A--LTER TABLE APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1 rename to APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_PRIOR;
-- change first snap to be the recently replaced
a--lter table APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1604724178734_1604750472681 rename to APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1;
select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1;

--no don't --DROP VIEW APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY ;

-- make changes below and then rebuild the history
CREATE OR REPLACE VIEW APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY  
COMMENT = 'Union LMA_LICENSE_CLNCPQ snapshots to make complete history'
AS 
WITH the_union AS (
SELECT
	ACCOUNTID__C
	, ACCOUNT_NAME__C
	, ADMIN_USERS__C
	, AUTHOR_USERS__C
	, AUTO_RENEW__C
	, COMPLY_USERS__C
	, CREATEDBYID
	, CREATEDDATE
	, CURRENCYISOCODE
	, CUSTOM_LAST_MODIFIED_DATE__C
	, ID
	, ISDELETED
	, IS_APTTUS_CUSTOMER__C
	, LASTMODIFIEDBYID
	, LASTMODIFIEDDATE
	, LASTREFERENCEDDATE
	, LASTVIEWEDDATE
	, NAME
	, OEM__C
	, OTHER_USERS_DESCRIPTION__C
	, OTHER_USERS__C
	, OWNERID
	, RECORDTYPEID
	, RELEASE_NAME__C
	, RENEWAL_PROVISIONS__C
	, SFLMA__ACCOUNT__C
	, SFLMA__CONTACT__C
	, SFLMA__EXPIRATION_DATE__C
	, SFLMA__EXPIRATION__C
	, SFLMA__HELP__C
	, SFLMA__INSTALL_DATE__C
	, SFLMA__IS_SANDBOX__C
	, SFLMA__LEAD__C
	, SFLMA__LICENSED_SEATS__C
	, SFLMA__LICENSE_STATUS__C
	, SFLMA__LICENSE_TYPE__C
	, SFLMA__ORG_INSTANCE__C
	, SFLMA__ORG_STATUS_FORMULA__C
	, SFLMA__ORG_STATUS__C
	, SFLMA__ORG_TRIAL_EXPIRATION__C
	, SFLMA__ORG_TYPE__C
	, SFLMA__PACKAGE_LICENSE_ID__C
	, SFLMA__PACKAGE_VERSION__C
	, SFLMA__PROXY_USER__C
	, SFLMA__SEATS__C
	, SFLMA__STATUS__C
	, SFLMA__SUBSCRIBER_ORG_ID__C
	, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
	, SFLMA__TRIAL_EXPIRATION_DATE__C
	, SFLMA__USED_LICENSES__C
	, SYSTEMMODSTAMP
	, TDO_NAME__C
	, TOTAL_USERS_ROLLUP__C
	, WIZARD_USERS__C
	, _SDC_BATCHED_AT
	, _SDC_EXTRACTED_AT
	, _SDC_RECEIVED_AT
	, _SDC_SEQUENCE
	, _SDC_TABLE_VERSION
	, LASTACTIVITYDATE
	, ACCOUNT_NAME_TEXT__C
	, STATUS_DATE__C
	, ACCOUNT_ID__C
	, SFLMA__PACKAGE__C
	, SFLMA__ORG_EDITION__C
	, PACKAGE_NAME__C
	, PACKAGE_VERSION_NAME__C
	, X18_DIGIT_ACCOUNT_ID__C
	, X18_DIGIT_NEW_SFDC_ID__C
	, SFDC_OEM_EMBEDDED_SEATS__C
	, SFLMA__PACKAGE_VERSION_NUMBER__C
        , SFLMA__INSTANCE__C
        , SFLMA__VERSION_NUMBER__C
        , SFLMA__LAST_MODIFIED__C
-- change -- add latest columns  
	, SNAP_LOAD_AT
FROM
-- change -- update to most recent snap	
	APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_SNAP_1604724178734_1605952931520
UNION
SELECT
	ACCOUNTID__C
	, ACCOUNT_NAME__C
	, ADMIN_USERS__C
	, AUTHOR_USERS__C
	, AUTO_RENEW__C
	, COMPLY_USERS__C
	, CREATEDBYID
	, CREATEDDATE
	, CURRENCYISOCODE
	, CUSTOM_LAST_MODIFIED_DATE__C
	, ID
	, ISDELETED
	, IS_APTTUS_CUSTOMER__C
	, LASTMODIFIEDBYID
	, LASTMODIFIEDDATE
	, LASTREFERENCEDDATE
	, LASTVIEWEDDATE
	, NAME
	, OEM__C
	, OTHER_USERS_DESCRIPTION__C
	, OTHER_USERS__C
	, OWNERID
	, RECORDTYPEID
	, RELEASE_NAME__C
	, RENEWAL_PROVISIONS__C
	, SFLMA__ACCOUNT__C
	, SFLMA__CONTACT__C
	, SFLMA__EXPIRATION_DATE__C
	, SFLMA__EXPIRATION__C
	, SFLMA__HELP__C
	, SFLMA__INSTALL_DATE__C
	, SFLMA__IS_SANDBOX__C
	, SFLMA__LEAD__C
	, SFLMA__LICENSED_SEATS__C
	, SFLMA__LICENSE_STATUS__C
	, SFLMA__LICENSE_TYPE__C
	, SFLMA__ORG_INSTANCE__C
	, SFLMA__ORG_STATUS_FORMULA__C
	, SFLMA__ORG_STATUS__C
	, SFLMA__ORG_TRIAL_EXPIRATION__C
	, SFLMA__ORG_TYPE__C
	, SFLMA__PACKAGE_LICENSE_ID__C
	, SFLMA__PACKAGE_VERSION__C
	, SFLMA__PROXY_USER__C
	, SFLMA__SEATS__C
	, SFLMA__STATUS__C
	, SFLMA__SUBSCRIBER_ORG_ID__C
	, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
	, SFLMA__TRIAL_EXPIRATION_DATE__C
	, SFLMA__USED_LICENSES__C
	, SYSTEMMODSTAMP
	, TDO_NAME__C
	, TOTAL_USERS_ROLLUP__C
	, WIZARD_USERS__C
	, _SDC_BATCHED_AT
	, _SDC_EXTRACTED_AT
	, _SDC_RECEIVED_AT
	, _SDC_SEQUENCE
	, _SDC_TABLE_VERSION
	, LASTACTIVITYDATE
	, ACCOUNT_NAME_TEXT__C
	, STATUS_DATE__C
	, ACCOUNT_ID__C
	, SFLMA__PACKAGE__C
	, SFLMA__ORG_EDITION__C
	, PACKAGE_NAME__C
	, PACKAGE_VERSION_NAME__C
	, X18_DIGIT_ACCOUNT_ID__C
	, X18_DIGIT_NEW_SFDC_ID__C
	, SFDC_OEM_EMBEDDED_SEATS__C
	, NULL AS SFLMA__PACKAGE_VERSION_NUMBER__C
        , NULL AS SFLMA__INSTANCE__C
        , NULL AS SFLMA__VERSION_NUMBER__C
        , NULL AS SFLMA__LAST_MODIFIED__C	
-- change -- remove NULL AS from previous round
-- change -- ADD newest Columns as NULL AS 	
	, SNAP_LOAD_AT
FROM
	LMA_LICENSE_CLMCPQ_SNAP_1
)
, the_unique AS (
	SELECT ID
         , _SDC_EXTRACTED_AT 
         , MAX(SNAP_LOAD_AT) AS SNAP_LOAD_AT
    FROM the_union  
    GROUP BY ID
         , _SDC_EXTRACTED_AT 
)
	SELECT A.*
	     , to_date(SYSTEMMODSTAMP) AS ACTIVITY_DATE
	     , dateadd(day, -1, to_date(A."_SDC_EXTRACTED_AT")) AS EXTRACT_DATE
	     , dateadd(day, -1, to_date(A."SNAP_LOAD_AT")) AS REPORTING_DATE	
	FROM                 the_union A
	INNER JOIN           the_unique B
	             ON  A.ID = B.ID
	             AND A._SDC_EXTRACTED_AT = B._SDC_EXTRACTED_AT
	             AND A.SNAP_LOAD_AT = B.SNAP_LOAD_AT
;

-- RUN duplicate detector to be sure you haven't created duplicates in History View
SELECT count(*)
     , ID
     , _SDC_EXTRACTED_AT 
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY
group by ID
       , _SDC_EXTRACTED_AT 
having count(*) > 1
--0 if this doesn't come up as Zero there are issues that need to be researched! 
;

select count(distinct ID)
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY
-- 1999531
;

select count(distinct ID
      , _SDC_EXTRACTED_AT)
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY
-- 8037108
;

--no don't --DROP VIEW APTTUS_DW.SNAPSHOTS.FMA_VALUES_CURRENT ;
-- rerun current view if there are new columns (check that it is still working in any case
CREATE OR REPLACE VIEW APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_CURRENT  
COMMENT = 'get the most current record for each license ID from the CLMCPQ history object'
AS 
WITH the_unique_current AS (
	SELECT ID
         , MAX(_SDC_EXTRACTED_AT) AS LAST_EXTRACTED_AT 
    FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY
    WHERE _SDC_EXTRACTED_AT <= CURRENT_TIMESTAMP() 
    GROUP BY ID
)
	SELECT A.*
	FROM            APTTUS_DW.SNAPSHOTS.LMA_LICENSE_CLMCPQ_HISTORY A
	INNER JOIN      the_unique_current B 
	            ON  A.ID = B.ID 
	            AND A._SDC_EXTRACTED_AT = B.LAST_EXTRACTED_AT
;


