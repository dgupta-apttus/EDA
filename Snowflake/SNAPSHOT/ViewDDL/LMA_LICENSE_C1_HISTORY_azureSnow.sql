SELECT CURRENT_ROLE();
-- CHANGE -- uncommend insert and update table name to previous snap
-- CHANGE -- manage columns near bottom

Select TABLE_CATALOG||'.'||TABLE_SCHEMA||'.'||TABLE_NAME, MAX(ORDINAL_POSITION)
 FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
 WHERE TABLE_NAME LIKE 'LMA_LICENSE_C1_SNAP%'
 GROUP by TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
 order by 1
; 

with get_last as(
        Select MAX(ORDINAL_POSITION) as LAST_COL
         FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
         WHERE TABLE_NAME = 'LMA_LICENSE_C1_SNAP_1'
)
Select TABLE_CATALOG||'.'||TABLE_SCHEMA||'.'||TABLE_NAME, ORDINAL_POSITION, COLUMN_NAME
 FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
 WHERE TABLE_NAME LIKE 'LMA_LICENSE_C1_SNAP%'
   AND ORDINAL_POSITION > ((SELECT LAST_COL from get_last)-1)
   AND COLUMN_NAME <> 'SNAP_LOAD_AT'
; 

Select TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION
FROM APTTUS_DW.INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME LIKE 'LMA_LICENSE_C1_SNAP%'
ORDER BY ORDINAL_POSITION, TABLE_NAME 
;

select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1;
select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1604000614937_1604006747444;
select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1604750307127_1604765053771;

INSERT INTO APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1604000614937_1604006747444 
       ( ACCOUNT_SUSPENDED__C, BA_EMAIL__C, BA__C, COMPANY_FROM_LEAD__C, CONGA_EDITION__C, CREATEDBYID, CREATEDDATE, CUSTOMER_ORG_ID__C
       , EXPIRATION_DATE__C, ID, INSTALL_DATE_CHECK__C, ISDELETED, LASTMODIFIEDBYID, LASTMODIFIEDDATE, LEAD_COMPANY__C, LEAD_EMAIL__C
       , LICENSE_CHECK__C, NAME, OWNERID, PACKAGE_NAMEFX__C, PRODUCTION__C, QUIK_CUSTOMER_ID__C, RECORDTYPEID, RECORD_URL__C, SALESFORCE_ORGID__C
       , SFLMA__ACCOUNT__C, SFLMA__CONTACT__C, SFLMA__EXPIRATION_DATE__C, SFLMA__EXPIRATION__C, SFLMA__HELP__C, SFLMA__INSTALL_DATE__C
       , SFLMA__INSTANCE__C, SFLMA__IS_SANDBOX__C, SFLMA__LAST_MODIFIED__C, SFLMA__LEAD__C, SFLMA__LICENSED_SEATS__C, SFLMA__LICENSE_STATUS__C
       , SFLMA__LICENSE_TYPE__C, SFLMA__ORG_EDITION__C, SFLMA__ORG_INSTANCE__C, SFLMA__ORG_STATUS_FORMULA__C, SFLMA__ORG_STATUS__C
       , SFLMA__ORG_TRIAL_EXPIRATION__C, SFLMA__ORG_TYPE__C, SFLMA__PACKAGE_LICENSE_ID__C, SFLMA__PACKAGE_VERSION_NUMBER__C, SFLMA__PACKAGE_VERSION__C
       , SFLMA__PACKAGE__C, SFLMA__PROXY_USER__C, SFLMA__SEATS__C, SFLMA__STATUS__C, SFLMA__SUBSCRIBER_ORG_ID__C, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
       , SFLMA__TRIAL_EXPIRATION_DATE__C, SFLMA__USED_LICENSES__C, SFLMA__VERSION_NUMBER__C, SUSPEND_ACCOUNT__C, SYSTEMMODSTAMP, UNINSTALL_DATE__C
       , _SDC_BATCHED_AT, _SDC_EXTRACTED_AT, _SDC_RECEIVED_AT, _SDC_SEQUENCE, _SDC_TABLE_VERSION
       , LASTACTIVITYDATE
       , SNAP_LOAD_AT) 
SELECT  ACCOUNT_SUSPENDED__C, BA_EMAIL__C, BA__C, COMPANY_FROM_LEAD__C, CONGA_EDITION__C, CREATEDBYID, CREATEDDATE, CUSTOMER_ORG_ID__C
       , EXPIRATION_DATE__C, ID, INSTALL_DATE_CHECK__C, ISDELETED, LASTMODIFIEDBYID, LASTMODIFIEDDATE, LEAD_COMPANY__C, LEAD_EMAIL__C
       , LICENSE_CHECK__C, NAME, OWNERID, PACKAGE_NAMEFX__C, PRODUCTION__C, QUIK_CUSTOMER_ID__C, RECORDTYPEID, RECORD_URL__C, SALESFORCE_ORGID__C
       , SFLMA__ACCOUNT__C, SFLMA__CONTACT__C, SFLMA__EXPIRATION_DATE__C, SFLMA__EXPIRATION__C, SFLMA__HELP__C, SFLMA__INSTALL_DATE__C
       , SFLMA__INSTANCE__C, SFLMA__IS_SANDBOX__C, SFLMA__LAST_MODIFIED__C, SFLMA__LEAD__C, SFLMA__LICENSED_SEATS__C, SFLMA__LICENSE_STATUS__C
       , SFLMA__LICENSE_TYPE__C, SFLMA__ORG_EDITION__C, SFLMA__ORG_INSTANCE__C, SFLMA__ORG_STATUS_FORMULA__C, SFLMA__ORG_STATUS__C
       , SFLMA__ORG_TRIAL_EXPIRATION__C, SFLMA__ORG_TYPE__C, SFLMA__PACKAGE_LICENSE_ID__C, SFLMA__PACKAGE_VERSION_NUMBER__C, SFLMA__PACKAGE_VERSION__C
       , SFLMA__PACKAGE__C, SFLMA__PROXY_USER__C, SFLMA__SEATS__C, SFLMA__STATUS__C, SFLMA__SUBSCRIBER_ORG_ID__C, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
       , SFLMA__TRIAL_EXPIRATION_DATE__C, SFLMA__USED_LICENSES__C, SFLMA__VERSION_NUMBER__C, SUSPEND_ACCOUNT__C, SYSTEMMODSTAMP, UNINSTALL_DATE__C
       , _SDC_BATCHED_AT, _SDC_EXTRACTED_AT, _SDC_RECEIVED_AT, _SDC_SEQUENCE, _SDC_TABLE_VERSION 
       , NULL AS LASTACTIVITYDATE
-- change -- remove older NULL AS from column
-- change -- add columns from the previous snap iteration as NULL AS 
       , SNAP_LOAD_AT 
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1;

-- change -- check counts to insure that the recently replaced snap now has all rows
DROP TABLE APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1;
-- change first snap to be the recently replaced 
alter table APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1604000614937_1604006747444 rename to APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1;
select count(*) from APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1;

--do not --DROP VIEW APTTUS_DW.SNAPSHOTS.FMA_VALUES_HISTORY ;
-- make changes below and then rebuild the history
CREATE OR REPLACE VIEW APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_HISTORY  
COMMENT = 'Union LMA_LICENSE_C1 snapshots to make complete history'
AS 
WITH the_union AS (
SELECT
	ACCOUNT_SUSPENDED__C
	, BA_EMAIL__C
	, BA__C
	, COMPANY_FROM_LEAD__C
	, CONGA_EDITION__C
	, CREATEDBYID
	, CREATEDDATE
	, CUSTOMER_ORG_ID__C
	, EXPIRATION_DATE__C
	, ID
	, INSTALL_DATE_CHECK__C
	, ISDELETED
	, LASTMODIFIEDBYID
	, LASTMODIFIEDDATE
	, LEAD_COMPANY__C
	, LEAD_EMAIL__C
	, LICENSE_CHECK__C
	, "NAME"
	, OWNERID
	, PACKAGE_NAMEFX__C
	, PRODUCTION__C
	, QUIK_CUSTOMER_ID__C
	, RECORDTYPEID
	, RECORD_URL__C
	, SALESFORCE_ORGID__C
	, SFLMA__ACCOUNT__C
	, SFLMA__CONTACT__C
	, SFLMA__EXPIRATION_DATE__C
	, SFLMA__EXPIRATION__C
	, SFLMA__HELP__C
	, SFLMA__INSTALL_DATE__C
	, SFLMA__INSTANCE__C
	, SFLMA__IS_SANDBOX__C
	, SFLMA__LAST_MODIFIED__C
	, SFLMA__LEAD__C
	, SFLMA__LICENSED_SEATS__C
	, SFLMA__LICENSE_STATUS__C
	, SFLMA__LICENSE_TYPE__C
	, SFLMA__ORG_EDITION__C
	, SFLMA__ORG_INSTANCE__C
	, SFLMA__ORG_STATUS_FORMULA__C
	, SFLMA__ORG_STATUS__C
	, SFLMA__ORG_TRIAL_EXPIRATION__C
	, SFLMA__ORG_TYPE__C
	, SFLMA__PACKAGE_LICENSE_ID__C
	, SFLMA__PACKAGE_VERSION_NUMBER__C
	, SFLMA__PACKAGE_VERSION__C
	, SFLMA__PACKAGE__C
	, SFLMA__PROXY_USER__C
	, SFLMA__SEATS__C
	, SFLMA__STATUS__C
	, SFLMA__SUBSCRIBER_ORG_ID__C
	, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
	, SFLMA__TRIAL_EXPIRATION_DATE__C
	, SFLMA__USED_LICENSES__C
	, SFLMA__VERSION_NUMBER__C
	, SUSPEND_ACCOUNT__C
	, SYSTEMMODSTAMP
	, UNINSTALL_DATE__C
	, "_SDC_BATCHED_AT"
	, "_SDC_EXTRACTED_AT"
	, "_SDC_RECEIVED_AT"
	, "_SDC_SEQUENCE"
	, "_SDC_TABLE_VERSION"
	, LASTACTIVITYDATE
-- change -- add latest columns 	
	, SNAP_LOAD_AT
FROM
	APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1604750307127_1604765053771
UNION
	SELECT
		ACCOUNT_SUSPENDED__C
		, BA_EMAIL__C
		, BA__C
		, COMPANY_FROM_LEAD__C
		, CONGA_EDITION__C
		, CREATEDBYID
		, CREATEDDATE
		, CUSTOMER_ORG_ID__C
		, EXPIRATION_DATE__C
		, ID
		, INSTALL_DATE_CHECK__C
		, ISDELETED
		, LASTMODIFIEDBYID
		, LASTMODIFIEDDATE
		, LEAD_COMPANY__C
		, LEAD_EMAIL__C
		, LICENSE_CHECK__C
		, "NAME"
		, OWNERID
		, PACKAGE_NAMEFX__C
		, PRODUCTION__C
		, QUIK_CUSTOMER_ID__C
		, RECORDTYPEID
		, RECORD_URL__C
		, SALESFORCE_ORGID__C
		, SFLMA__ACCOUNT__C
		, SFLMA__CONTACT__C
		, SFLMA__EXPIRATION_DATE__C
		, SFLMA__EXPIRATION__C
		, SFLMA__HELP__C
		, SFLMA__INSTALL_DATE__C
		, SFLMA__INSTANCE__C
		, SFLMA__IS_SANDBOX__C
		, SFLMA__LAST_MODIFIED__C
		, SFLMA__LEAD__C
		, SFLMA__LICENSED_SEATS__C
		, SFLMA__LICENSE_STATUS__C
		, SFLMA__LICENSE_TYPE__C
		, SFLMA__ORG_EDITION__C
		, SFLMA__ORG_INSTANCE__C
		, SFLMA__ORG_STATUS_FORMULA__C
		, SFLMA__ORG_STATUS__C
		, SFLMA__ORG_TRIAL_EXPIRATION__C
		, SFLMA__ORG_TYPE__C
		, SFLMA__PACKAGE_LICENSE_ID__C
		, SFLMA__PACKAGE_VERSION_NUMBER__C
		, SFLMA__PACKAGE_VERSION__C
		, SFLMA__PACKAGE__C
		, SFLMA__PROXY_USER__C
		, SFLMA__SEATS__C
		, SFLMA__STATUS__C
		, SFLMA__SUBSCRIBER_ORG_ID__C
		, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
		, SFLMA__TRIAL_EXPIRATION_DATE__C
		, SFLMA__USED_LICENSES__C
		, SFLMA__VERSION_NUMBER__C
		, SUSPEND_ACCOUNT__C
		, SYSTEMMODSTAMP
		, UNINSTALL_DATE__C
		, "_SDC_BATCHED_AT"
		, "_SDC_EXTRACTED_AT"
		, "_SDC_RECEIVED_AT"
		, "_SDC_SEQUENCE"
		, "_SDC_TABLE_VERSION"
        	, LASTACTIVITYDATE
-- change -- remove NULL AS from previous round
-- change -- ADD newest Columns as NULL AS 		
		, SNAP_LOAD_AT
	FROM
		APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_SNAP_1
/* union to redshift history not necessary now that stitch is loading full history		
UNION
	SELECT
		ACCOUNT_SUSPENDED__C
		, BA_EMAIL__C
		, BA__C
		, COMPANY_FROM_LEAD__C
		, CONGA_EDITION__C
		, CREATEDBYID
		, CREATEDDATE
		, CUSTOMER_ORG_ID__C
		, EXPIRATION_DATE__C
		, ID
		, INSTALL_DATE_CHECK__C
		, ISDELETED
		, LASTMODIFIEDBYID
		, LASTMODIFIEDDATE
		, LEAD_COMPANY__C
		, LEAD_EMAIL__C
		, LICENSE_CHECK__C
		, "NAME"
		, OWNERID
		, PACKAGE_NAMEFX__C
		, PRODUCTION__C
		, QUIK_CUSTOMER_ID__C
		, RECORDTYPEID
		, RECORD_URL__C
		, SALESFORCE_ORGID__C
		, SFLMA__ACCOUNT__C
		, SFLMA__CONTACT__C
		, SFLMA__EXPIRATION_DATE__C
		, SFLMA__EXPIRATION__C
		, SFLMA__HELP__C
		, SFLMA__INSTALL_DATE__C
		, SFLMA__INSTANCE__C
		, SFLMA__IS_SANDBOX__C
		, SFLMA__LAST_MODIFIED__C
		, SFLMA__LEAD__C
		, SFLMA__LICENSED_SEATS__C
		, SFLMA__LICENSE_STATUS__C
		, SFLMA__LICENSE_TYPE__C
		, SFLMA__ORG_EDITION__C
		, SFLMA__ORG_INSTANCE__C
		, SFLMA__ORG_STATUS_FORMULA__C
		, SFLMA__ORG_STATUS__C
		, SFLMA__ORG_TRIAL_EXPIRATION__C
		, SFLMA__ORG_TYPE__C
		, SFLMA__PACKAGE_LICENSE_ID__C
		, SFLMA__PACKAGE_VERSION_NUMBER__C
		, SFLMA__PACKAGE_VERSION__C
		, SFLMA__PACKAGE__C
		, SFLMA__PROXY_USER__C
		, SFLMA__SEATS__C
		, SFLMA__STATUS__C
		, SFLMA__SUBSCRIBER_ORG_ID__C
		, SFLMA__SUBSCRIBER_ORG_IS_SANDBOX__C
		, SFLMA__TRIAL_EXPIRATION_DATE__C
		, SFLMA__USED_LICENSES__C
		, SFLMA__VERSION_NUMBER__C
		, SUSPEND_ACCOUNT__C
		, SYSTEMMODSTAMP
		, UNINSTALL_DATE__C
		, "_SDC_BATCHED_AT"
		, "_SDC_EXTRACTED_AT"
		, "_SDC_RECEIVED_AT"
		, "_SDC_SEQUENCE"
		, "_SDC_TABLE_VERSION"
		, SNAP_LOAD_AT
	FROM	APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_FROMREDSHIFT	
*/	
)
, the_unique AS (
	SELECT ID
         , _SDC_EXTRACTED_AT 
         , MAX(SNAP_LOAD_AT) AS SNAP_LOAD_AT
    FROM the_union  
    GROUP BY ID
         , _SDC_EXTRACTED_AT 
)
	SELECT A.*
	     , to_date(SYSTEMMODSTAMP) AS ACTIVITY_DATE
	     , dateadd(day, -1, to_date(A."_SDC_EXTRACTED_AT")) AS EXTRACT_DATE
	     , dateadd(day, -1, to_date(A."SNAP_LOAD_AT")) AS REPORTING_DATE	
	FROM                 the_union A
	INNER JOIN           the_unique B
	             ON  A.ID = B.ID
	             AND A._SDC_EXTRACTED_AT = B._SDC_EXTRACTED_AT
	             AND A.SNAP_LOAD_AT = B.SNAP_LOAD_AT
;

-- RUN duplicate detector to be sure you haven't created duplicates in History View
SELECT count(*)
     , ID
     , _SDC_EXTRACTED_AT 
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_HISTORY
group by ID
       , _SDC_EXTRACTED_AT 
having count(*) > 1
-- 0 this needs to get a zero or else there are issues!
;

select count(distinct ID)
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_HISTORY
-- 912650
;

select count(distinct ID
      , _SDC_EXTRACTED_AT)
FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_HISTORY
; -- 2649616

-- rebuild current if there are new columns
CREATE OR REPLACE VIEW LMA_LICENSE_C1_CURRENT  
COMMENT = 'get the most current record for each license ID from the history object'
AS 
WITH the_unique_current AS (
	SELECT ID
         , MAX(_SDC_EXTRACTED_AT) AS LAST_EXTRACTED_AT 
    FROM APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_HISTORY
    WHERE _SDC_EXTRACTED_AT <= CURRENT_TIMESTAMP() 
    GROUP BY ID
)
	SELECT A.*
	FROM            APTTUS_DW.SNAPSHOTS.LMA_LICENSE_C1_HISTORY A
	INNER JOIN      the_unique_current B 
	            ON  A.ID = B.ID 
	            AND A._SDC_EXTRACTED_AT = B.LAST_EXTRACTED_AT;